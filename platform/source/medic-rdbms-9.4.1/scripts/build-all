#!/bin/bash

set -o pipefail

self="`readlink -f "$0" 2>/dev/null || realpath "$0"`"
base_dir="`dirname "$self"`/.."

source "$base_dir/scripts/include/logger" 2>/dev/null &&
source "$base_dir/scripts/include/builder" 2>/dev/null \
    || fatal 'Unable to load a required library'

main()
{
  local prefix="$1"
  local pkg_start="`echo "$2" | sed -E 's/\//-/g;'`"
  local pkg_start_version="$3"
  local pkg_stop="`echo "$4" | sed -E 's/\//-/g;'`"
  local pkg_stop_version="$5"
  local platform="$6"
  local bits="$7"
  local parallel="$8"

  check_args "$@" || usage

  local uname="`uname -s`"
  local stdarg="--prefix='$prefix'"

  builder_initialize &&
  builder_setup_environment "$prefix" \
    "$pkg_start" "$pkg_start_version" "$pkg_stop" \
      "$pkg_stop_version" "$uname" "$architecture" "$bits" "$parallel"

  [ $? -eq 0 ] \
    || fatal 'Failed to set up build environment'

  build_autoconf 'pv' "$stdarg"

  if [ "$?" -ne 0 ]; then
    fatal 'One or more build steps failed; aborting'
  fi

  return 0
}

fatal()
{
  echo "$0: fatal: $*" >&2
  exit 1
}

check_args()
{
  local prefix="$1"

  [ -d "$prefix" ] 
}

usage()
{
  echo
  echo "Usage:" >&2
  echo "  $0 root-directory" >&2
  echo

  exit 111
}

cd "$base_dir/source" && main "$@"
exit $?

