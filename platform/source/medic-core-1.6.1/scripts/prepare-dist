#!/bin/bash

set -o pipefail

prefix="$1"

if ! [ -d "$prefix" ]; then
  echo "Usage: $0 <prefix>" >&2
  exit 111
fi

up='../../../../..'

(cd "$prefix" &&
  rm -rf Library usr lib/perl5 lib/engines lib/*.la \
    lib/*.a lib/*.py bin/*.py lib/python?.? lib/erlang/usr \
    lib/erlang/Install info include man java/manual share/man \
    share/gtk-doc share/doc doc logs html share/info share/emacs \
    etc/ssh_host* libexec/ssh-keysign usr/share/man etc/ssl/man) &&
\
(cd "$prefix/lib/erlang/lib" && mkdir -p .save &&
  mv asn1-* crypto-* compiler-* inets-* kernel-* os_mon-* public_key-* \
    sasl-* ssl-* stdlib-* tools-* syntax_tools-* xmerl-* .save &&
      rm -rf * && mv .save/* . && rmdir .save) &&
\
(cd "$prefix/java" &&
  rm -rf boot etc tools &&
  rm -f INSTALL KEYS LICENSE NOTICE README \
    README.md README.txt WHATSNEW fetch.xml get-m2.xml) &&
\
(cd "$prefix/java/bin" && 
  rm -f ant* mvn* m2.conf *.pl *.py *.bat *.cmd) &&
\
# Dependency size optimization:
#   This is aggressive. Remove any JARs that aren't needed during
#   normal execution of our applications. Unnecessary dependencies
#   are determined by runtime tracing (i.e. `java -verbose:class`),
#   plus some simple reasoning that's informed by dependency graphs.
#   When updating couchdb-lucene, take care to review this exclusion
#   list, update it if necessary, and thoroughly test the build.
\
(cd "$prefix/java/lib" &&
  rm -rf ext && rm -f README *.pom *.license *.properties &&
  rm -f aether-*.jar ant*.jar aopalliance-*.jar \
    apache-mime4j-*.jar asm-debug-all-*.jar aspectjrt-*.jar \
    bcmail-*.jar bcprov-*.jar bcprov-*.jar boilerpipe-*.jar \
    cdi-api-*.jar commons-beanutils-*.jar commons-cli-*.jar \
    commons-compress-*.jar commons-digester-*.jar commons-io-2.2.jar \
    commons-lang-2.6.jar dom4j-*.jar fontbox-*.jar geronimo-stax-api-*.jar \
    guava-*.jar isoparser-*.jar javaassist-*.jar jdom-*.jar jempbox-*.jar \
    jetty-client-*.jar jhighlight-*.jar jsoup-*.jar jsr250-api-*.jar \
    maven*.jar netcdf-*.jar ooxml-schemas-*.jar org.eclipse.sisu.*.jar \
    pdfbox-*.jar plexus-*.jar poi-*.jar rome-*.jar scannotation-*.jar \
    sisu-*.jar slf4j-simple-*.jar stax-api-*.jar tagsoup-*.jar tika-*.jar \
    vorbis-java-*.jar wagon-*.jar xmlbeans-*.jar xmpcore-*.jar) &&
\
(cd "$prefix" &&
  rm -rf etc/ssh &&
    ln -sf "$up/settings/medic-core/openssh" etc/ssh &&
  rm -rf etc/nginx &&
    ln -sf "$up/settings/medic-core/nginx" etc/nginx &&
  rm -rf var/log/nginx &&
    ln -sf "$up/../storage/medic-core/nginx/logs" var/log/nginx &&
  rm -rf var/run/nginx &&
    ln -sf "$up/../storage/medic-core/nginx/state" var/run/nginx &&
  rm -rf etc/couchdb &&
    ln -sf "$up/settings/medic-core/couchdb" etc/couchdb &&
  rm -rf var/log/couchdb &&
    ln -sf "$up/../storage/medic-core/couchdb/logs" var/log/couchdb &&
  rm -rf var/lib/couchdb &&
    ln -sf "$up/../storage/medic-core/couchdb/data" var/lib/couchdb &&
  rm -rf var/run/couchdb &&
    ln -sf "$up/../storage/medic-core/couchdb/state" var/run/couchdb &&
  rm -rf java/logs &&
    ln -sf "$up/storage/medic-core/couchdb-lucene/logs" java/logs &&
  rm -rf java/conf &&
    ln -sf "$up/settings/medic-core/couchdb-lucene" java/conf &&
  rm -rf java/indexes &&
    ln -sf "$up/storage/medic-core/couchdb-lucene/indexes" java/indexes) &&
\
(cd "$prefix/bin" &&
  chmod u-s,g-s screen screen-* &&
  rm -f gitk libusb.py jadmaker node-gyp *-config *.old &&
  for binary in git-receive-pack git-upload-archive; do
    rm -f "$binary" && ln -sf git "$binary";
  done &&
  for binary in git git-cvsserver git-shell git-upload-pack; do
    rm -f "$binary" && ln -sf "../libexec/git-core/$binary" "$binary";
  done) &&
\
(cd "$prefix/lib" &&
  rm -rf erlang/erts-5.10.4/man) &&
\
(cd "$prefix/sbin" &&
  rm -f tcpdump.*) &&
\
(cd "$prefix/lib/node_modules" &&
  rm -rf node-gyp npm/man nodelint/man1) &&
\
(cd "$prefix/lib/node_modules/medic-transport/node_modules" &&
  rm -rf node-gammu-json && ln -sf ../../node-gammu-json)

