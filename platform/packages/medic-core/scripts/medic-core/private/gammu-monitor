#!/bin/sh

monitor()
{
  local self="`realpath "$0"`"
  local base="`dirname -- "$self"`"

  source "$base/../env" &&
  merge_environment /srv

  local service='gammu'
  local restart_service=''
  local package='medic-core'

  local device=''
  local last_device=''
  local settings_dir="/srv/storage/$package/$service/monitor"

  # Clean up:
  #  These files might be left-over from a previous boot.

  rm -f "$settings_dir/detected" "$settings_dir/detecting" &&
  mkdir -p "$settings_dir"

  # Main loop:
  #  Find the device that's currently in use. If it changes or
  #  goes away entirely, log the event and probe for a new one.
 
  while true; do

    if ! rm -f "$settings_dir/detecting"; then
      warn "Failed to remove a file from '$settings_dir'"
      continue
    fi

    sleep 1

    last_device="$device"
    device="`"$base/gammu-status" gammu`"

    # Device already set up and owned by us?
    #  If so, go back around and wait for it to disappear.

    if [ "$device" ]; then
      continue
    fi

    # No device?
    #   If no device is present, we need to probe again.

    if [ "$last_device" ]; then
      warn "Device '$last_device' was lost"
    fi

    if ! rm -f "$settings_dir/detected"; then
      warn "Failed to remove a file from '$settings_dir'"
      continue
    fi

    # Quick search for an eligible device:
    #   If one exists, go ahead with the expensive autodetection.

    if "$base/gammu-status" &>/dev/null; then

      warn 'Possible device(s) found, running autodetection'

      if ! touch "$settings_dir/detecting"; then
        warn "Failed to create a file in '$settings_dir'"
        continue
      fi

      if device="`"$base/gammu-autodetect"`"; then

        warn "Auto-detection found device '$device'"

        # Tell others about the device:
        #   Other programs can watch for this file if needed.

        if ! echo "$device" > "$settings_dir/detected"; then
          warn "Failed to restart '$package/$service'"
          continue
        fi

        # Anything to restart?
        #   If not, we're done; go back to sleep and poll for termination.

        if [ -z "$package" -o -z "$restart_service" ]; then
          continue;
        fi

        warn "Restarting '$package/$service' to add new device(s)..."

        if ! /boot/svc-reload "$package" "$restart_service"; then
          warn "Failed to restart '$package/$restart_service'"
          rm -f "$settings_dir/detected"
          continue
        fi

      fi

    fi
  done
  
  return 1
}

warn()
{
  echo "`date`: Warning: $*" >&2
}

fatal()
{
  echo "`date`: Fatal: $*" >&2
  exit 1
}

main()
{
  monitor
  return "$?"
}

main
exit "$?"

