#!/bin/sh

detect()
{
  local self="`realpath "$0"`"
  local base="`dirname -- "$self"`"

  source "$base/../env" &&
  merge_environment /srv

  local user='gammu'
  local service='gammu'
  local package='medic-core'

  local storage_dir="/srv/storage/$package/$service"
  local settings_dir="/srv/settings/$package/$service"
  local settings_file="$settings_dir/autodetect.conf"
  
  local logs_dir="$storage_dir/logs"
  local log="$logs_dir/gammu-autodetect.log"

  for device_path in $GAMMU_SMS_DEVICES; do 

    if ! [ -c "$device_path" ]; then
      continue
    fi
    
    local device_name="`basename -- "$device_path"`"

    # Probe for device:
    #   Re-create configuration file, then attempt to identify device.

    rm -f "$settings_file" && mkdir -p "$logs_dir" &&
    warn "Auto-detect running for '$device_path'" &&
    \
    sed "s/ttyUSBX/$device_name/g;" < "$settings_file.template" \
      > "$settings_file" 2>/dev/null &&
    \
    gammu -c "$settings_file" identify >> "$log" 2>&1

    if [ "$?" -eq 0 ]; then

      # Take ownership and return full device path
      chown "$user:$user" "$device_path" && echo "$device_path"

      if [ "$?" -ne 0 ]; then
        warn "Failed to take ownership of '$device_path'"
        warn "Skipping device; continuing auto-detection"
        return 2
      fi

      return 0
    fi
  done

  return 1
}

warn()
{
  echo "`date`: Warning: $*" >&2
}

fatal()
{
  echo "`date`: Fatal: $*" >&2
  exit 1
}

main()
{
  detect
  return "$?"
}

main
exit "$?"

