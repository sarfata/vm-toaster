#!/bin/sh

set -o pipefail

print_logs()
{
  local hide_title="$1"
  shift 1

  local title="Medic OS: Server Log Report"

  local host="`hostname`" &&
  local kernel="`uname -r` on `uname -m`" &&
  local date="`date -u +'%Y-%m-%d at %I:%M%P' | sed 's/ 0/ /g'`" \
    || return 1

  if [ -z "$hide_title" ]; then
    echo && echo "$title" && underline "$title" '-' \
      || return 2

    echo &&
    echo "- **Server Hostname**: \`$host\`" &&
    echo "- **Kernel Version**: \`$kernel\`" &&
    echo "- **Report Created On**: \`$date UTC\`" || return 3
  fi
 
  if [ "$#" -le 0 ]; then
    echo && echo 'No filenames were provided.'
    return 0
  fi

  # For each argument
  for path in "$@"; do

    # Print file name
    echo && echo "#### $path:" || return 4

    # File type checks
    if ! [ -r "$path" ]; then
      echo '    File is unreadable or does not exist.'
      continue
    fi

    if ! [ -f "$path" -o -h "$path" ]; then
      echo '    Path is not a file or symbolic link.'
      continue
    fi

    local command='cat'
    local file="`basename -- "$path"`" || return 5

    # Transparent decompression
    if [ "`basename -- "$file" .gz`" != "$file" ]; then
      command='gzip -dc'
    elif [ "`basename -- "$file" .bz2`" != "$file" ]; then
      command='bzip2 -dc'
    elif [ "`basename -- "$file" .xz`" != "$file" ]; then
      command='xz -dc'
    fi

    # File size check
    local size="`$command "$path" | wc -c`" || return 6

    if [ "$size" -le 0 ]; then
      echo '    File exists but is empty.'
      continue
    fi

    # Print file contents
    $command "$path" | indent \
      || return 7
  done

  echo
  return 0
}

