#!/bin/sh

set -o pipefail

source '/boot/include/hypervisor'
hypervisor_init

set_echo()
{
  local direction="$1"

  if hypervisor_has_limited_console; then
    return 0
  fi

  if [ "$direction" -eq 0 ]; then
    stty -echo 2>/dev/null
  else
    stty echo 2>/dev/null
  fi
}

set_console_blanking()
{
  local minutes="$1"

  if hypervisor_has_limited_console; then
    return 0
  fi

  echo -ne "\033[9;$minutes]\033[14;$minutes]" > /dev/console
}

set_cursor()
{
  local direction="$1"

  if hypervisor_has_limited_console; then
    return 0
  fi

  if [ "$direction" -eq 0 ]; then
    echo -ne '\033[?25l'
  else
    echo -ne '\033[?25h'
  fi
}

set_bold()
{
  local state="$1"

  if hypervisor_has_limited_console; then
    return 0
  fi

  if [ "$state" -eq 0 ]; then
    echo -ne '\033[0m'
  else
    echo -ne '\033[1m'
  fi
}

save_cursor_position()
{
  if hypervisor_has_limited_console; then
    return 0
  fi

  echo -ne '\033[s'
}

restore_cursor_position()
{
  if hypervisor_has_limited_console; then
    return 0
  fi

  echo -ne '\033[u'
}

move_cursor()
{
  local axis="$1"
  local count="$2"

  if hypervisor_has_limited_console; then
    return 0
  fi

  if [ "$axis" = 'y' ]; then
    if [ "$count" -lt 0 ]; then
      echo -ne "\033[$((0 - $count))A"
    else
      echo -ne "\033[${count}B"
    fi
  else
    if [ "$count" -lt 0 ]; then
      echo -ne "\033[$((0 - $count))D"
    else
      echo -ne "\033[${count}C"
    fi
  fi
}

clear_text()
{
  local axis="$1"
  local is_backward="$2"

  if hypervisor_has_limited_console; then
    return 0
  fi

  if [ "$axis" = 'y' ]; then
    axis='J'
  else
    axis='K'
  fi
    
  if [ "$is_backward" ]; then
    is_backward='1'
  fi

  echo -ne "\\033[${is_backward}${axis}"
}

display_centered()
{
  local text="$1"

  if [ "`hypervisor_type`" = 'xen' ]; then
    echo -e "$text" > /dev/hvc0
    return 0
  fi

  local columns="`
    stty -a |
      sed -n '/columns / s/^.*\?columns \+\([0-9]\+\).*$/\1/p' 2>/dev/null
  `"

  local maximum="$(($columns - 2))" 2>/dev/null

  if [ "${#text}" -gt "$maximum" ]; then
    text="`
      echo "$text" |
        sed "s/^ *\\(.\\{0,$maximum\\}\\).*$/\\1/g;" 2>/dev/null
    `"
  fi

  local length=$((${#text} / 2)) 2>/dev/null
  local indent=$((($columns / 2) - (${#text} / 2))) 2>/dev/null

  echo -ne '\r'
  clear_text 'x'
  
  for i in `seq 1 "$indent"`; do
    echo -n ' ';
  done

  echo -ne "$text"
}


activity_frame='0'
activity_direction='1'

display_activity_indicator()
{
  local final_activity_frame="$1"
  shift 1

  if hypervisor_has_limited_console; then
    return 0
  fi

  if [ "$activity_frame" -le 1 ]; then
    activity_direction='1'
  elif [ "$activity_frame" -ge "$final_activity_frame" ]; then
    activity_direction='0'
  fi

  if [ "$activity_direction" -eq 0 ]; then
    activity_frame="$(($activity_frame - 1))"
  else
    activity_frame="$(($activity_frame + 1))"
  fi

  local line=''

  for i in `seq 2 "$activity_frame"`; do
    line="$line   "
  done

  line="$line."
  
  for i in `seq "$(($activity_frame + 1))" "$final_activity_frame"`; do
    line="$line   "
  done

  display_centered " $line "
  echo -ne '\r'
}

