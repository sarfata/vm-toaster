#!/bin/sh

source '/boot/include/utility'
source '/boot/include/cursor'
source '/boot/include/startup'
source '/boot/include/supervisor'
source '/boot/include/hypervisor'

main()
{
  local numerator='0'
  local denominator='0'

  set_echo 0
  set_cursor 0
  move_cursor 'y' -1
  set_console_blanking 0

  hypervisor_init
  supervisor_init

  trap '' INT STOP HUP QUIT
  local ip_address="`discover_ip_address`"

  while true; do
  
    save_cursor_position

    if [ "$ip_address" ]; then
      display_centered "Server is available at http://$ip_address."
    else
      set_bold 1
      display_centered "Server has no IP address at this time."
      set_bold 0
    fi

    if [ "`hypervisor_type`" = 'xen' ]; then
      display_centered "System booted successfully."
      display_centered "Xen hypervisor present; suppressing status display."
      while true; do sleep 3600; done
    fi

    echo

    if display_services; then
      echo && display_centered ''
      echo && display_connectivity
      move_cursor 'y' 2 && display_activity_indicator 6
      echo
    fi

    clear_text 'y'
    restore_cursor_position
    sleep 3

  done

  return 0
}

display_connectivity()
{
  local base_dir='/srv/storage/medic-core/gammu/monitor';

  if [ -f "$base_dir/detected" ]; then
    display_centered "Modem is attached and functioning properly."
    set_hypervisor_variable modem_status 2
  elif [ -f "$base_dir/detecting" ]; then
    set_bold 1
    display_centered "Detected a USB GSM modem; configuring device..."
    set_bold 0
    set_hypervisor_variable modem_status 1
  else
    set_bold 1
    display_centered "Warning: No supported GSM modem attached."
    set_bold 0
    set_hypervisor_variable modem_status 0
  fi

  echo && display_centered
  return 0
}

display_services()
{
  local numerator='0';
  local denominator='0';

  for i in `supervisor_list_all_packages`; do

    local expected_services="`
      supervisor_list_expected_services "$i" | wc -l
    `"
    local running_services="`
      supervisor_list_running_services "$i" | wc -l
    `"
    numerator="$(($numerator + $running_services))" 2>/dev/null
    denominator="$(($denominator + $expected_services))" 2>/dev/null
  done
    
  delta="$(($denominator - $numerator))" 2>/dev/null

  if [ "$denominator" -le 0 ]; then
    set_bold 1
    display_centered "No usable system services could be located."
    set_bold 0
  elif [ "$delta" -le 0 ]; then
    display_centered "All system services are running normally."
    return 0
  else
    set_bold 1
    if [ "$delta" -gt 1 ]; then
      display_centered "Problem: $delta services are functioning improperly."
    else
      display_centered "Problem: One service is functioning improperly."
    fi
    set_bold 0
  fi

  echo
  echo && display_centered "This condition might be resolved by rebooting the VM."
  echo && display_centered "If this message persists, please contact support."

  return 1
}

main
exit "$?"

